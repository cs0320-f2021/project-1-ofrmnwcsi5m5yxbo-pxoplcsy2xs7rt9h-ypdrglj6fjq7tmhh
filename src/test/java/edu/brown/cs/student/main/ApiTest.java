package edu.brown.cs.student.main;

import static org.junit.Assert.assertEquals;

import edu.brown.cs.student.main.DataHandling.DataHandler;
import edu.brown.cs.student.main.DataHandling.DataTypes.DataType;
import edu.brown.cs.student.main.DataHandling.DataTypes.Rental;
import edu.brown.cs.student.main.DataHandling.DataTypes.Review;
import edu.brown.cs.student.main.DataHandling.DataTypes.User;
import org.junit.Test;

import java.io.IOException;
import java.sql.Array;

public class ApiTest {
  /**
   * Test that there are indeed 15 total User entries just like the .json file
   */
  @Test
  public void testUserDataSize() {
    try {
      DataHandler dataHandler = new DataHandler();
      DataType[] usersDataType = dataHandler.readFromAPI("users");
      if (usersDataType instanceof User[]) {
        User[] users = (User[]) usersDataType;
        assertEquals(users.length, 15, 0.1);
      }
    } catch (Exception e) {
      System.out.println("ERROR: this userData test shouldn't be throwing an error :P whyyyy");
    }
  }

  /**
   * Compares user list generated from API to user list generated by .json file.
   * Ensure they contain the same objects
   */
  @Test
  public void testUserDataCorrect() {
    try {
      DataHandler dataHandler = new DataHandler();
      // Get user data from .json file
      DataType[] usersDataType2 = dataHandler.readFromFile("data/project-1/justusersSMALL.json", "users");
      User[] usersJSON = (User[]) usersDataType2;
      // Get user data from API
      DataType[] usersDataType1 = dataHandler.readFromAPI("users");
      if (usersDataType1 instanceof User[]) {
        User[] usersAPI = (User[]) usersDataType1;

        for (User user : usersAPI) {
          boolean found = false;
          for (int i = 0; i < usersJSON.length; i++) {
            if(usersJSON[i].equals(user)) {
              found = true;
            }
          }
          if (!found) {
            throw new Exception();
          }
        }
      }
    } catch (Exception e) {
      System.out.println("ERROR: userData should be matching");
    }
  }

  /**
   * Test that there are indeed 30 total Review entries just like the .json file
   */
  @Test
  public void testReviewDataSize() {
    try {
      DataHandler dataHandler = new DataHandler();
      DataType[] reviewDataType = dataHandler.readFromAPI("reviews");
      if (reviewDataType instanceof Review[]) {
        Review[] reviews = (Review[]) reviewDataType;
        assertEquals(reviews.length, 30, 0.1);
      }
    } catch (Exception e) {
      System.out.println("ERROR: this reviewData test shouldn't be throwing an error :P");
    }
  }

  /**
   * Test that there are indeed 30 total Rental entries just like the .json file
   */
  @Test
  public void testRentalDataSize() {
    try {
      DataHandler dataHandler = new DataHandler();
      DataType[] rentDataType = dataHandler.readFromAPI("rent");
      if (rentDataType instanceof Rental[]) {
        Rental[] rents = (Rental[]) rentDataType;
        assertEquals(rents.length, 30, 0.1);
      }
    } catch (Exception e) {
      System.out.println("ERROR: this reviewData test shouldn't be throwing an error :P");
    }
  }
}
